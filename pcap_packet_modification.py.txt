import time
from scapy.all import *
import binascii

pcap_root_dir = r"C:\Users\Noam Levi\Desktop\Sumitomo demo\15_pcap"

# orignal fiel
orig_file = os.path.join(pcap_root_dir, 'AR_PDU_15_single_packet.pcap')

# new file locaition
new_file = os.path.join(pcap_root_dir, 'AR_PDU_15_single_packet_modify.pcap')

# rd_pcap comes from scapy and loads in our pcap file - read file - into *packets*
packets = rdpcap(orig_file)

# list of new modifiyed packets
new_modify_packets = []

modify_packet = packets

print(modify_packet,'/n')

# print (modify_packet[0])

# _________________________________________

modify_packet[0][Ether][Dot1Q][IP].len =  0x0123

pk = modify_packet[0]

l2 = Ether(dst=pk[Ether].dst, src=pk[Ether].src, type=pk[Ether].type)

# ###[ Ethernet ]###
#   dst       = 3c:ce:15:00:00:06
#   src       = 3c:ce:15:00:00:01
#   type      = VLAN
#
#print ('Ethernet - ', l2)
l2_1 = Dot1Q(
        prio=pk[Ether][Dot1Q].prio,
        id=pk[Ether][Dot1Q].id,
        vlan=pk[Ether][Dot1Q].vlan,
        type=pk[Ether][Dot1Q].type
            )
# ###[ 802.1Q ]###
#      prio      = 5
#      id        = 0
#      vlan      = 10
#      type      = IPv4
#print ('802.1Q - ',l2_1)

l3 = IP(
    # version=pk[Ether][Dot1Q][IP].version,
    ihl=pk[Ether][Dot1Q][IP].ihl,
    tos=pk[Ether][Dot1Q][IP].tos,
    #,len=pk[Ether][Dot1Q][IP].len
    id = pk[Ether][Dot1Q][IP].id,
    flags = pk[Ether][Dot1Q][IP].flags,
    frag = pk[Ether][Dot1Q][IP].frag,
    ttl = pk[Ether][Dot1Q][IP].ttl,
    proto = pk[Ether][Dot1Q][IP].proto,
    #,chksum = pk[Ether][Dot1Q][IP].chksum
    src = pk[Ether][Dot1Q][IP].src,
    dst = pk[Ether][Dot1Q][IP].dst
    )
# ###[ IP ]###
#         version   = 4
#         ihl       = 5
#         tos       = 0x0
#         len       = 491
#         id        = 45867
#         flags     = DF
#         frag      = 0
#         ttl       = 64
#         proto     = udp
#         chksum    = 0x6f5e
#         src       = 10.10.1.10
#         dst       = 10.10.1.91
#         \options
# print ('IP - ',l3)

l4 = UDP(
    sport=pk[Ether][Dot1Q][UDP].sport,
    dport=pk[Ether][Dot1Q][UDP].dport
        )
         #,len=pk[Ether][Dot1Q][UDP].len,chksum=pk[Ether][Dot1Q][UDP].chksum)

# ###[ UDP ]###
#            sport     = 40000
#            dport     = 40000
#            len       = 471
#            chksum    = 0xa793
# print ('UDP - ',l4,'\n')


l5 = Raw(load=b'\x0b\x98\x80\x08\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x01\x00' \
              b'\x0b\x99\x70\x07\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x01\x00' \
              b'\x0b\x99\x82\x06\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x01\x00' \
              b'\x0b\x99\x80\x15\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x01\x00' \
              b'\x0b\x99\x80\x04\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x01\x00' \
              b'\x0b\x99\x80\x03\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x01\x00' \
              b'\x0b\x99\x80\x09\x00\x20\x00\x0b\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x00' \
              b'\x0b\x99\x80\x15\x00\x03\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x15\x00' \
              b'\x0b\x99\x80\x14\x00\x00\x10\r\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x2a\x00\x00' \
              b'\x0b\x99\x80\x13\x00\x00\x02\x0f\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x00\x3e\x3c\x00\x00' \
              b'\x0b\x99\x80\x12\x00\x00\x00\x1c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x00\x00' \
              b'\x0b\x99\x80\x11\x00\x00\x00\x0d\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x00\x00' \
              b'\x0b\x99\x80\x10\x00\x00\x00\x0c\x10\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x1e\x00' \
              b'\x0b\x99\x80\x0f\x00\x00\x00\x0c\x02\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x1e\x00' \
              b'\x0b\x99\x80\x0e\x00\x00\x00\x0c\x00\x30\x00\x00\x01\x01\x02\x00\x84\x0b\x1e\x00' \
              b'\x0b\x99\x80\x0d\x00\x00\x00\x0c\x00\x06\x00\x00\x01\x01\x02\x00\x84\x0b\x1e\x00' \
              b'\x0b\x99\x80\x0c\x00\x00\x00\x0c\x00\x00\x10\x00\x01\x01\x02\x00\x84\x0b\x1a\x00' \
              b'\x0b\x99\x80\x02\x00\x00\x00\x19\x00\x00\x00\x10\x01\x01\x02\x00\x84\x0b\x00\x00\x00\x00\x00\x00\x01\x01\x01\x1e\x1e\x1e\x00\x00\x00' \
              b'\x0b\x99\x80\x0a\x00\x00\x00\x19\x00\x00\x00\x01\x01\x01\x02\x00\x84\x0b\x00\x00\x00\x00\x00\x00\x01\x01\x01\x1e\x1e\x1e\x00\x00\x00' \
              b'\x0b\x99\x80\x16\x00\x00\x00\x19\x00\x00\x00\x00\x11\x01\x02\x00\x84\x0b\x00\x00\x00\x00\x00\x00\x01\x01\x01\x1e\x1e\x1e\x00\x00\x00' \
              b'\x0b\x99\x80\x0b\x00\x00\x00\x0d\x00\x00\x00\x00\x03\x01\x02\x00\x84\x0b\x01\x01\x00' \
              b'\x0b\x99\x80\x07\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x24\x02\x00\x84\x0b\x01\x00' \
              b'\x0b\x99\x80\x07\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x12\x00\x84\x0b\x01\x00' \
              b'\x0b\x99\x80\x07\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x06\x00\x84\x0b\x01\x00' \
              b'\x0b\x99\x80\x07\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x10\x84\x0b\x01\x00' \
              b'\x0b\x99\x80\x07\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x02\x84\x0b\x01\x00' \
              b'\x0b\x99\x80\x07\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x74\x0b\x01\x00' \
              b'\x0b\x99\x80\x07\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x83\x0b\x01\x00' \
              b'\x0b\x99\x80\x06\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x1b\x01\x00' \
              b'\x0b\x99\x80\x05\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0c\x01\x00' \
              b'\x0b\x99\x80\x04\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x11\x00' \
              b'\x0b\x99\x80\x03\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x07\x10' \
              b'\x0b\x99\x80\x09\x00\x00\x00\x0b\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x02' \
              b'\x0b\x99\x80\x15\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x15\x02' \
              b'\x0b\x99\x80\x14\x00\x00\x00\r\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x2a\x00\x70' \
              b'\x0b\x99\x80\x13\x00\x00\x00\x0f\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x00\x3e\x3c\x70\x00' \
              b'\x0b\x99\x80\x12\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x00\x07' \
              b'\x0b\x99\x80\x11\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x00\x50' \
              b'\x0b\x99\x80\x10\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x1e\x05' \
              b'\x0b\x99\x80\x0f\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x1e\x30' \
              b'\x0b\x99\x80\x0e\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x1d\x00' \
              b'\x0b\x99\x80\x0d\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x1e\x02' \
              b'\x0b\x99\x80\x0c\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x1a\x10' \
              b'\x0b\x99\x80\x02\x00\x00\x00\x19\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x00\x00\x00\x00\x00\x00\x01\x01\x01\x1e\x1e\x1e\x07\x00\x00' \
              b'\x0b\x99\x80\x0a\x00\x00\x00\x19\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x00\x00\x00\x00\x00\x00\x01\x01\x01\x1e\x1e\x1e\x00\x70\x00' \
              b'\x0b\x99\x80\x16\x00\x00\x00\x19\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x00\x00\x00\x00\x00\x00\x01\x01\x01\x1e\x1e\x1e\x00\x07\x00' \
              b'\x0b\x99\x80\x0b\x00\x00\x00\x0d\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x01\x01\x70' \
              b'\x0b\x99\x80\x07\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x01\x73' \
              b'\x0b\x99\x80\x07\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x02\x00' \
              b'\x0b\x99\x80\x07\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0c\x01\x00' \
              b'\x0b\x99\x80\x07\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x01\x01' \
              b'\x0b\x99\x80\x07\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x01\x70' \
              b'\x0b\x99\x80\x07\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x0b\x07\x00' \
              b'\x0b\x99\x80\x07\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x00\x84\x07\x01\x00' \
              b'\x0b\x99\x80\x07\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x07\x00\x84\x0b\x01\x00' \
              b'\x0b\x99\x80\x06\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x07\x02\x00\x84\x0b\x01\x00' \
              b'\x0b\x99\x80\x05\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x02\x84\x0b\x01\x00' \
              b'\x0b\x99\x80\x04\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x70\x84\x0b\x01\x00' \
              b'\x0b\x99\x80\x03\x00\x00\x00\x0c\x00\x00\x00\x00\x07\x01\x02\x00\x84\x0b\x01\x00' \
              b'\x0b\x99\x80\x09\x00\x00\x00\x0b\x00\x00\x07\x00\x01\x01\x02\x00\x84\x0b\x00' \
              b'\x0b\x99\x80\x14\x00\x00\x00\r\x00\x00\x07\x00\x01\x01\x02\x00\x84\x0b\x2a\x00\x00' \
              b'\x0b\x99\x80\x13\x00\x00\x00\x0f\x00\x00\x00\x00\x07\x01\x02\x00\x84\x0b\x00\x3e\x3c\x00\x00' \
              b'\x0b\x99\x80\x12\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x06\x00\x84\x0b\x00\x00' \
              b'\x0b\x99\x80\x11\x00\x00\x00\x0c\x00\x00\x00\x00\x01\x01\x02\x05\x84\x0b\x00\x00' \
              b'\x0b\x99\x80\x02\x00\x00\x00\x19\x00\x00\x00\x00\x01\x01\x02\x00\x88\x0b\x00\x00\x00\x00\x00\x00\x01\x01\x01\x1e\x1e\x1e\x00\x00\x00' \
              b'\x0b\x99\x80\x0a\x00\x00\x00\x19\x00\x00\x00\x00\x01\x01\x02\x00\x87\x0b\x00\x00\x00\x00\x00\x00\x01\x01\x01\x1e\x1e\x1e\x00\x00\x00' \
              b'\x0b\x99\x80\x16\x00\x00\x00\x19\x00\x00\x00\x00\x01\x01\x02\x00\x85\x0b\x00\x00\x00\x00\x00\x00\x01\x01\x01\x1e\x1e\x1e\x00\x00\x00' \
       )

new_packet = l2/l2_1/l3/l4/l5

new_modify_packets.append(new_packet)

print (new_modify_packets[0])

# _________________________________________

prev_time = time.time()
packets_in_loop = []

for packet_i in new_modify_packets:
    # packet_i.time = prev_time + random.randint(1, 20) / 1.0e4
    packet_i.time = prev_time + 1/1.0e4
    prev_time = packet_i.time
    # print("packet_i.time is: {}".format(packet_i.time))
    packets_in_loop.append(packet_i)

wrpcap(new_file, packets_in_loop)

